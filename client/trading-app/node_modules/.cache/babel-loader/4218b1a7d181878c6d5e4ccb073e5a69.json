{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Login.jsx\";\nimport Navbar from './Navbar';\nimport React, { useEffect, useState } from 'react';\n\nfunction Login(props) {\n  const [username, setUserName] = useState([]);\n  const [password, setPassword] = useState([]);\n\n  const handleChange = event => {\n    if ([event.target.name] == 'username') {\n      setUserName(event.target.value);\n    } else if ([event.target.name] == 'password') {\n      setPassword(event.target.value);\n    } else {\n      console.log(event.target.name);\n    }\n  };\n\n  const Submit = async event => {\n    const response = await fetch(`http://localhost:5000/api/users/${username}`, {\n      method: 'GET',\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'include',\n      // include, *same-origin, omit\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer' // no-referrer, *client\n\n    });\n\n    if (response.success) {\n      sessionStorage.clearItem(\"username\");\n      sessionStorage.setItem(\"username\", username);\n    }\n\n    const data = await response.json();\n    console.log(\"Response data: \", data);\n    props.handleLoginSuccess([data.body]); // parses JSON response into native JavaScript objects\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Login to trading practice\"), React.createElement(\"form\", {\n    onSubmit: Submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: username,\n    name: \"username\",\n    placeholder: \"User name\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Please enter a username\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    name: \"password\",\n    placeholder: \"password\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Login.jsx"],"names":["Navbar","React","useEffect","useState","Login","props","username","setUserName","password","setPassword","handleChange","event","target","name","value","console","log","Submit","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","success","sessionStorage","clearItem","setItem","data","json","handleLoginSuccess","body"],"mappings":"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","sourcesContent":["import Navbar from './Navbar';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Login(props){\r\n  const [username, setUserName] = useState([]);\r\n  const [password, setPassword] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    if([event.target.name] == 'username'){\r\n        setUserName(event.target.value);\r\n    }else if([event.target.name] == 'password'){\r\n        setPassword(event.target.value);\r\n    }else{\r\n        console.log(event.target.name);\r\n    }\r\n    \r\n  };\r\n  const Submit = async (event) => {\r\n    const response = await fetch(\r\n      `http://localhost:5000/api/users/${username}`, {\r\n          method: 'GET',\r\n          mode: 'cors', // no-cors, *cors, same-origin\r\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n          credentials: 'include', // include, *same-origin, omit\r\n          headers: {\"content-type\":\"application/json\"},\r\n          redirect: 'follow', // manual, *follow, error\r\n          referrerPolicy: 'no-referrer', // no-referrer, *client\r\n      });\r\n\r\n      if(response.success){\r\n        sessionStorage.clearItem(\"username\");\r\n        sessionStorage.setItem(\"username\", username)\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Response data: \", data);\r\n  props.handleLoginSuccess([data.body]);\r\n  \r\n\r\n\r\n    \r\n    // parses JSON response into native JavaScript objects\r\n  };\r\n\r\nreturn (\r\n    <div>\r\n      <Navbar />\r\n      <h1>Login to trading practice</h1>\r\n      <form onSubmit={Submit}>\r\n        <div className='form-group'>\r\n          <label >User Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            value={username}\r\n            name='username'\r\n            placeholder=\"User name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <small id='emailHelp' className='form-text text-muted'>\r\n            Please enter a username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label >Password</label>\r\n          <input\r\n            type='password'\r\n            className='form-control'\r\n            value={password}\r\n            name='password'\r\n            placeholder='password'\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button className='btn btn-primary' type=\"submit\">\r\n        Login\r\n      </button>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}