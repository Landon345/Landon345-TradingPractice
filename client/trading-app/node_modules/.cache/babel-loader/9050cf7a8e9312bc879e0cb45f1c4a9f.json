{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Register.jsx\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Register() {\n  useEffect(() => {\n    fetchUsersTable();\n  }, []); //define the states\n\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState([]);\n  const [password, setPassword] = useState([]); //call the api to retrieve the data\n\n  const fetchUsersTable = async () => {\n    const data = await fetch('http://localhost:5000/api/users', {\n      method: 'get'\n    });\n    const jsonData = await data.json();\n    setUsers(jsonData);\n    console.log(users);\n    console.log(\"ran fetch\");\n  };\n\n  const Submit = async () => {\n    console.log(userName.name);\n    console.log(password.pass);\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].userName == userName.name) {\n        warning;\n        return;\n      }\n    }\n\n    const newUser = {\n      username: userName.name,\n      password: password.pass,\n      money: 10000,\n      premium_user: false\n    };\n    await fetch('http://localhost:5000/api/users', {\n      method: 'post',\n      body: JSON.stringify(newUser)\n    });\n  };\n\n  const enteredUserName = e => {\n    let name = e.target.value; //console.log(name);\n\n    setUserName({\n      name\n    });\n  };\n\n  const enteredPassword = e => {\n    let pass = e.target.value; //console.log(pass);\n\n    setPassword({\n      pass\n    });\n  }; //Make a register form\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Register for Trading Practice\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputEmail1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    onChange: enteredUserName,\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Must be a unique user name\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputPassword1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: enteredPassword,\n    type: \"password\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: Submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Register.jsx"],"names":["React","useEffect","useState","Register","fetchUsersTable","users","setUsers","userName","setUserName","password","setPassword","data","fetch","method","jsonData","json","console","log","Submit","name","pass","i","length","warning","newUser","username","money","premium_user","body","JSON","stringify","enteredUserName","e","target","value","enteredPassword"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\nfunction Register(){\r\n    useEffect(()=>{\r\n        fetchUsersTable();\r\n    }, []);\r\n\r\n    //define the states\r\n    const [users, setUsers] = useState([]);\r\n    const [userName, setUserName] = useState([]);\r\n    const [password, setPassword] = useState([]);\r\n\r\n    //call the api to retrieve the data\r\n    const fetchUsersTable = async () => {\r\n        const data = await fetch(\r\n            'http://localhost:5000/api/users', {\r\n            method: 'get'\r\n            }\r\n        );\r\n        const jsonData = await data.json();\r\n        setUsers(jsonData);\r\n        console.log(users);\r\n        console.log(\"ran fetch\");\r\n    }\r\n\r\n    const Submit = async () => {\r\n        console.log(userName.name);\r\n        console.log(password.pass);\r\n        for(let i = 0; i<users.length; i++){\r\n            if(users[i].userName == userName.name){\r\n                warning \r\n                return;\r\n            }\r\n        }\r\n        const newUser = {\r\n            username: userName.name,\r\n            password: password.pass,\r\n            money: 10000,\r\n            premium_user: false\r\n        }\r\n\r\n        await fetch(\r\n            'http://localhost:5000/api/users', {\r\n                method: 'post',\r\n                body: JSON.stringify(newUser)\r\n            }\r\n        )\r\n        \r\n    }\r\n\r\n    const enteredUserName = (e) => {\r\n       let name = e.target.value;\r\n       //console.log(name);\r\n       setUserName({name});\r\n    }\r\n    const enteredPassword = (e) => {\r\n        let pass = e.target.value;\r\n        //console.log(pass);\r\n        setPassword({pass});\r\n    }\r\n\r\n    //Make a register form\r\n    return(\r\n        <div>\r\n\r\n            <h1>Register for Trading Practice</h1>\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">User Name</label>\r\n                <input onChange={enteredUserName} type=\"text\" className=\"form-control\"/>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Must be a unique user name</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input onChange={enteredPassword} type=\"password\" className=\"form-control\"/>\r\n            </div>\r\n           \r\n            \r\n            </form>\r\n            <button className=\"btn btn-primary\" onClick={Submit}>Submit</button>\r\n            \r\n        </div>\r\n    );\r\n    \r\n\r\n\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}