{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Register.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\n\nfunction Register() {\n  let warning = \"Hello There\";\n  useEffect(() => {\n    fetchUsersTable();\n  }, []); //define the states\n\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState([]);\n  const [password, setPassword] = useState([]); //call the api to retrieve the data\n\n  const fetchUsersTable = async () => {\n    const data = await fetch('http://localhost:5000/api/users', {\n      method: 'get'\n    });\n    const jsonData = await data.json();\n    setUsers(jsonData);\n    console.log(users);\n    console.log(\"ran fetch\");\n  };\n\n  const Submit = async () => {\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].username == userName.name) {\n        warning = \"must use a unique name\";\n        return;\n      }\n\n      console.log(users[i].username);\n    }\n\n    const newUser = {\n      username: userName.name,\n      password: password.pass,\n      money: 10000,\n      premium_user: false\n    };\n    const response = await fetch('http://localhost:5000/api/users', {\n      method: 'POST',\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'omit',\n      // include, *same-origin, omit\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(newUser)\n    });\n    const data = await response.json(); // parses JSON response into native JavaScript objects\n  };\n\n  const enteredUserName = e => {\n    let name = e.target.value; //console.log(name);\n\n    setUserName({\n      name\n    });\n  };\n\n  const enteredPassword = e => {\n    let pass = e.target.value; //console.log(pass);\n\n    setPassword({\n      pass\n    });\n  }; //Make a register form\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Register for Trading Practice\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputEmail1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    onChange: enteredUserName,\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, warning)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputPassword1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: enteredPassword,\n    type: \"password\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: Submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Register\"));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Register.jsx"],"names":["React","useEffect","useState","Navbar","Register","warning","fetchUsersTable","users","setUsers","userName","setUserName","password","setPassword","data","fetch","method","jsonData","json","console","log","Submit","i","length","username","name","newUser","pass","money","premium_user","response","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","enteredUserName","e","target","value","enteredPassword"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Navbar from './Navbar';\r\n\r\n\r\nfunction Register(){\r\n    let warning = \"Hello There\";\r\n    useEffect(()=>{\r\n        fetchUsersTable();\r\n    }, []);\r\n\r\n    //define the states\r\n    const [users, setUsers] = useState([]);\r\n    const [userName, setUserName] = useState([]);\r\n    const [password, setPassword] = useState([]);\r\n\r\n    //call the api to retrieve the data\r\n    const fetchUsersTable = async () => {\r\n        const data = await fetch(\r\n            'http://localhost:5000/api/users', {\r\n            method: 'get'\r\n            }\r\n        );\r\n        const jsonData = await data.json();\r\n        setUsers(jsonData);\r\n        console.log(users);\r\n        console.log(\"ran fetch\");\r\n    }\r\n\r\n    const Submit = async () => {\r\n    \r\n        for(let i = 0; i<users.length; i++){\r\n            if(users[i].username == userName.name){\r\n                \r\n                warning = \"must use a unique name\";\r\n                return;\r\n            }\r\n            console.log(users[i].username);\r\n        }\r\n        const newUser = {\r\n            username: userName.name,\r\n            password: password.pass,\r\n            money: 10000,\r\n            premium_user: false\r\n        }\r\n\r\n        const response = await fetch(\r\n            'http://localhost:5000/api/users', {\r\n                method: 'POST',\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'omit', // include, *same-origin, omit\r\n                headers: {\"content-type\":\"application/json\"},\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *client\r\n                body: JSON.stringify(newUser)\r\n            });\r\n            const data = await response.json(); // parses JSON response into native JavaScript objects\r\n            \r\n        \r\n    }\r\n\r\n    const enteredUserName = (e) => {\r\n       let name = e.target.value;\r\n       //console.log(name);\r\n       setUserName({name});\r\n    }\r\n    const enteredPassword = (e) => {\r\n        let pass = e.target.value;\r\n        //console.log(pass);\r\n        setPassword({pass});\r\n    }\r\n\r\n    //Make a register form\r\n    return(\r\n        <div>\r\n\r\n            <h1>Register for Trading Practice</h1>\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">User Name</label>\r\n                <input onChange={enteredUserName} type=\"text\" className=\"form-control\"/>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">{warning}</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input onChange={enteredPassword} type=\"password\" className=\"form-control\"/>\r\n            </div>\r\n           \r\n            \r\n            </form>\r\n            <button className=\"btn btn-primary\" onClick={Submit}>Register</button>\r\n            \r\n        </div>\r\n    );\r\n    \r\n\r\n\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}