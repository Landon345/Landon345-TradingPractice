{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Register.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport useHttpGet from '../hooks/httpGet.js';\n\nfunction Register() {\n  //define the states\n  //const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [users] = useHttpGet('http://localhost:5000/api/users', []); //call the api to retrieve the data\n  // const fetchUsersTable = async () => {\n  //     const data = await fetch(\n  //         'http://localhost:5000/api/users', {\n  //         method: 'get'\n  //         }\n  //     );\n  //     const jsonData = await data.json();\n  //     setUsers(jsonData);\n  //     console.log(users);\n  //     console.log(\"ran fetch\");\n  // }\n\n  const Submit = async () => {\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].username == userName.name) {\n        return;\n      }\n\n      console.log(users[i].username);\n    }\n\n    const newUser = {\n      username: userName.name,\n      password: password.pass,\n      money: 10000,\n      premium_user: false\n    };\n    const response = await fetch('http://localhost:5000/api/users', {\n      method: 'POST',\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'omit',\n      // include, *same-origin, omit\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(newUser)\n    });\n    const data = await response.json(); // parses JSON response into native JavaScript objects\n  };\n\n  const enteredUserName = e => {\n    let name = e.target.value; //console.log(name);\n\n    setUserName({\n      name\n    });\n  };\n\n  const enteredPassword = e => {\n    let pass = e.target.value; //console.log(pass);\n\n    setPassword({\n      pass\n    });\n  }; //Make a register form\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Register for Trading Practice\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputEmail1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    onChange: enteredUserName,\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Please enter a username\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputPassword1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: enteredPassword,\n    type: \"password\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: Submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Register\"));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Register.jsx"],"names":["React","useEffect","useState","Navbar","useHttpGet","Register","userName","setUserName","password","setPassword","users","Submit","i","length","username","name","console","log","newUser","pass","money","premium_user","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","data","json","enteredUserName","e","target","value","enteredPassword"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Navbar from './Navbar';\r\nimport useHttpGet from '../hooks/httpGet.js';\r\n\r\n\r\nfunction Register(){\r\n    \r\n\r\n    //define the states\r\n    //const [users, setUsers] = useState([]);\r\n    const [userName, setUserName] = useState([]);\r\n    const [password, setPassword] = useState([]);\r\n\r\n\r\n    const [users] = useHttpGet('http://localhost:5000/api/users', []);\r\n    //call the api to retrieve the data\r\n    // const fetchUsersTable = async () => {\r\n    //     const data = await fetch(\r\n    //         'http://localhost:5000/api/users', {\r\n    //         method: 'get'\r\n    //         }\r\n    //     );\r\n    //     const jsonData = await data.json();\r\n    //     setUsers(jsonData);\r\n    //     console.log(users);\r\n    //     console.log(\"ran fetch\");\r\n    // }\r\n\r\n    const Submit = async () => {\r\n    \r\n        for(let i = 0; i<users.length; i++){\r\n            if(users[i].username == userName.name){\r\n                \r\n                \r\n                return;\r\n            }\r\n            console.log(users[i].username);\r\n        }\r\n        const newUser = {\r\n            username: userName.name,\r\n            password: password.pass,\r\n            money: 10000,\r\n            premium_user: false\r\n        }\r\n\r\n        const response = await fetch(\r\n            'http://localhost:5000/api/users', {\r\n                method: 'POST',\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'omit', // include, *same-origin, omit\r\n                headers: {\"content-type\":\"application/json\"},\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *client\r\n                body: JSON.stringify(newUser)\r\n            });\r\n            const data = await response.json(); // parses JSON response into native JavaScript objects\r\n            \r\n        \r\n    }\r\n\r\n    const enteredUserName = (e) => {\r\n       let name = e.target.value;\r\n       //console.log(name);\r\n       setUserName({name});\r\n    }\r\n    const enteredPassword = (e) => {\r\n        let pass = e.target.value;\r\n        //console.log(pass);\r\n        setPassword({pass});\r\n    }\r\n\r\n    //Make a register form\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <h1>Register for Trading Practice</h1>\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">User Name</label>\r\n                <input onChange={enteredUserName} type=\"text\" className=\"form-control\"/>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Please enter a username</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input onChange={enteredPassword} type=\"password\" className=\"form-control\"/>\r\n            </div>\r\n           \r\n            \r\n            </form>\r\n            <button className=\"btn btn-primary\" onClick={Submit}>Register</button>\r\n            \r\n        </div>\r\n    );\r\n    \r\n\r\n\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}