{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Login.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport useHttpGet from '../hooks/httpGet';\nimport useGetUserStocks from '../hooks/getUserStocks';\n\nfunction Login(props) {\n  //define the states\n  //const [users, setUsers] = useState([]);\n  const [username, setUserName] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [users] = useHttpGet('http://localhost:5000/api/users', []);\n  const [user] = useHttpGet('http://localhost:5000/api/user/loggedin', []);\n  console.log(user);\n\n  if (user) {\n    console.log(\"inside if statement\", user);\n    props.handleLoginSuccess(user);\n  }\n\n  const handleChange = event => {\n    if ([event.target.name] == 'username') {\n      setUserName(event.target.value);\n      console.log(user);\n    } else if ([event.target.name] == 'password') {\n      setPassword(event.target.value);\n    } else {\n      console.log(event.target.name);\n    }\n  };\n\n  const Submit = async e => {\n    e.preventDefault();\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].username == username && users[i].password == password) {\n        const user = {\n          username: username,\n          password: users[i].password,\n          dollars: users[i].dollars,\n          premium_user: users[i].premium_user,\n          loggedin: true\n        };\n        const response = await fetch(`http://localhost:5000/api/users/${username}`, {\n          method: 'Put',\n          mode: 'cors',\n          // no-cors, *cors, same-origin\n          cache: 'no-cache',\n          // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'include',\n          // include, *same-origin, omit\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          redirect: 'follow',\n          // manual, *follow, error\n          referrerPolicy: 'no-referrer',\n          // no-referrer, *client\n          body: JSON.stringify(user)\n        });\n        const data = await response.json();\n        console.log(\"Response data: \", data);\n        props.handleLoginSuccess(data.body);\n      }\n\n      console.log(users[i].username);\n    }\n  }; // const Validate = () => {\n  //   for (let i = 0; i < users.length; i++) {\n  //     if (\n  //       users[i].username === username &&\n  //       users[i].password === password\n  //     ) {\n  //       console.log(\"username and password correct\");\n  //       props.login(username, password);\n  //     }\n  //   }\n  // }\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Login to trading practice\"), React.createElement(\"form\", {\n    onSubmit: Submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: username,\n    name: \"username\",\n    placeholder: \"User name\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Please enter a username\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    name: \"password\",\n    placeholder: \"password\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Login.jsx"],"names":["React","useEffect","useState","Redirect","Navbar","useHttpGet","useGetUserStocks","Login","props","username","setUserName","password","setPassword","users","user","console","log","handleLoginSuccess","handleChange","event","target","name","value","Submit","e","preventDefault","i","length","dollars","premium_user","loggedin","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","data","json"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport useHttpGet from '../hooks/httpGet';\r\nimport useGetUserStocks from '../hooks/getUserStocks';\r\n\r\nfunction Login(props) {\r\n\r\n  \r\n  //define the states\r\n  //const [users, setUsers] = useState([]);\r\n  const [username, setUserName] = useState([]);\r\n  const [password, setPassword] = useState([]);\r\n\r\n  const [users] = useHttpGet('http://localhost:5000/api/users', []);\r\n  const [user] = useHttpGet('http://localhost:5000/api/user/loggedin', []);\r\n  console.log(user);\r\n  if(user){\r\n    console.log(\"inside if statement\", user);\r\n    props.handleLoginSuccess(user);\r\n  }\r\n  const handleChange = (event) => {\r\n    if([event.target.name] == 'username'){\r\n        setUserName(event.target.value);\r\n        console.log(user);\r\n    }else if([event.target.name] == 'password'){\r\n        setPassword(event.target.value);\r\n    }else{\r\n        console.log(event.target.name);\r\n    }\r\n    \r\n  };\r\n  \r\n\r\n  \r\n  const Submit = async (e) => {\r\n    e.preventDefault();\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].username == username && users[i].password == password) {\r\n        const user = {\r\n          username: username,\r\n          password: users[i].password,\r\n          dollars: users[i].dollars,\r\n          premium_user: users[i].premium_user,\r\n          loggedin: true\r\n        }\r\n        const response = await fetch(\r\n            `http://localhost:5000/api/users/${username}`, {\r\n                method: 'Put',\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'include', // include, *same-origin, omit\r\n                headers: {\"content-type\":\"application/json\"},\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *client\r\n                body: JSON.stringify(user)\r\n            });\r\n            const data = await response.json();\r\n            console.log(\"Response data: \", data);\r\n        props.handleLoginSuccess(data.body);\r\n        \r\n      }\r\n      console.log(users[i].username);\r\n    }\r\n    \r\n        \r\n  };\r\n  \r\n  // const Validate = () => {\r\n  //   for (let i = 0; i < users.length; i++) {\r\n  //     if (\r\n  //       users[i].username === username &&\r\n  //       users[i].password === password\r\n  //     ) {\r\n  //       console.log(\"username and password correct\");\r\n  //       props.login(username, password);\r\n       \r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h1>Login to trading practice</h1>\r\n      <form onSubmit={Submit}>\r\n        <div className='form-group'>\r\n          <label >User Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            value={username}\r\n            name='username'\r\n            placeholder=\"User name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <small id='emailHelp' className='form-text text-muted'>\r\n            Please enter a username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label >Password</label>\r\n          <input\r\n            type='password'\r\n            className='form-control'\r\n            value={password}\r\n            name='password'\r\n            placeholder='password'\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button className='btn btn-primary' type=\"submit\">\r\n        Login\r\n      </button>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}