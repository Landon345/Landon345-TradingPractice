{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Register.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport useHttpGet from '../hooks/httpGet';\n\nfunction Register() {\n  //define the states\n  //const [users, setUsers] = useState([]);\n  const [username, setUserName] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [users] = useHttpGet('http://localhost:5000/api/users', []); //call the api to retrieve the data\n  // const fetchUsersTable = async () => {\n  //     const data = await fetch(\n  //         'http://localhost:5000/api/users', {\n  //         method: 'get'\n  //         }\n  //     );\n  //     const jsonData = await data.json();\n  //     setUsers(jsonData);\n  //     console.log(users);\n  //     console.log(\"ran fetch\");\n  // }\n\n  const handleChange = () => {};\n\n  const Submit = event => {\n    event.preventDefault();\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].username == username) {\n        return;\n      }\n\n      console.log(users[i].username);\n    }\n\n    const newUser = {\n      username: username,\n      password: password.pass,\n      money: 10000,\n      premium_user: false\n    }; // parses JSON response into native JavaScript objects\n  }; // const response = await fetch(\n  //             'http://localhost:5000/api/users', {\n  //                 method: 'POST',\n  //                 mode: 'cors', // no-cors, *cors, same-origin\n  //                 cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n  //                 credentials: 'omit', // include, *same-origin, omit\n  //                 headers: {\"content-type\":\"application/json\"},\n  //                 redirect: 'follow', // manual, *follow, error\n  //                 referrerPolicy: 'no-referrer', // no-referrer, *client\n  //                 body: JSON.stringify(newUser)\n  //             });\n  //             const data = await response.json();\n  //Make a register form\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Register for Trading Practice\"), React.createElement(\"form\", {\n    onSubmit: Submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: username,\n    name: \"username\",\n    placeholder: \"User name\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Please enter a username\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    name: \"password\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Password Confirmation\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: passwordConfirmation,\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Register\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Register.jsx"],"names":["React","useEffect","useState","Navbar","useHttpGet","Register","username","setUserName","password","setPassword","users","handleChange","Submit","event","preventDefault","i","length","console","log","newUser","pass","money","premium_user","passwordConfirmation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACQ,KAAD,IAAUN,UAAU,CAAC,iCAAD,EAAoC,EAApC,CAA1B,CANkB,CAOlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMO,YAAY,GAAG,MAAM,CAAE,CAA7B;;AACA,QAAMC,MAAM,GAAGC,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,cAAN;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIL,KAAK,CAACK,CAAD,CAAL,CAAST,QAAT,IAAqBA,QAAzB,EAAmC;AACjC;AACD;;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACK,CAAD,CAAL,CAAST,QAArB;AACD;;AACD,UAAMa,OAAO,GAAG;AACdb,MAAAA,QAAQ,EAAEA,QADI;AAEdE,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,IAFL;AAGdC,MAAAA,KAAK,EAAE,KAHO;AAIdC,MAAAA,YAAY,EAAE;AAJA,KAAhB,CATsB,CAgBtB;AACD,GAjBD,CApBkB,CAsClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,EAGE;AAAM,IAAA,QAAQ,EAAEV,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAEN,QAHT;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,WAAW,EAAC,WALd;AAME,IAAA,QAAQ,EAAEK,YANZ;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE;AAAO,IAAA,EAAE,EAAC,WAAV;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAXF,CADF,EAgBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAEH,QAHT;AAIE,IAAA,IAAI,EAAC,UAJP;AAME,IAAA,QAAQ,EAAEG,YANZ;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhBF,EA4BE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAEY,oBAHT;AAIE,IAAA,QAAQ,EAAEZ,YAJZ;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA5BF,EAuCE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCF,CAHF,CADF;AAiDD;;AAED,eAAeN,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport useHttpGet from '../hooks/httpGet';\r\n\r\nfunction Register() {\r\n  //define the states\r\n  //const [users, setUsers] = useState([]);\r\n  const [username, setUserName] = useState([]);\r\n  const [password, setPassword] = useState([]);\r\n\r\n  const [users] = useHttpGet('http://localhost:5000/api/users', []);\r\n  //call the api to retrieve the data\r\n  // const fetchUsersTable = async () => {\r\n  //     const data = await fetch(\r\n  //         'http://localhost:5000/api/users', {\r\n  //         method: 'get'\r\n  //         }\r\n  //     );\r\n  //     const jsonData = await data.json();\r\n  //     setUsers(jsonData);\r\n  //     console.log(users);\r\n  //     console.log(\"ran fetch\");\r\n  // }\r\n  const handleChange = () => {};\r\n  const Submit = event => {\r\n    event.preventDefault();\r\n\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].username == username) {\r\n        return;\r\n      }\r\n      console.log(users[i].username);\r\n    }\r\n    const newUser = {\r\n      username: username,\r\n      password: password.pass,\r\n      money: 10000,\r\n      premium_user: false\r\n    };\r\n\r\n    // parses JSON response into native JavaScript objects\r\n  };\r\n  // const response = await fetch(\r\n  //             'http://localhost:5000/api/users', {\r\n  //                 method: 'POST',\r\n  //                 mode: 'cors', // no-cors, *cors, same-origin\r\n  //                 cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n  //                 credentials: 'omit', // include, *same-origin, omit\r\n  //                 headers: {\"content-type\":\"application/json\"},\r\n  //                 redirect: 'follow', // manual, *follow, error\r\n  //                 referrerPolicy: 'no-referrer', // no-referrer, *client\r\n  //                 body: JSON.stringify(newUser)\r\n  //             });\r\n  //             const data = await response.json();\r\n\r\n  //Make a register form\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h1>Register for Trading Practice</h1>\r\n      <form onSubmit={Submit}>\r\n        <div className='form-group'>\r\n          <label >User Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            value={username}\r\n            name='username'\r\n            placeholder=\"User name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <small id='emailHelp' className='form-text text-muted'>\r\n            Please enter a username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label >Password</label>\r\n          <input\r\n            type='password'\r\n            className='form-control'\r\n            value={password}\r\n            name='password'\r\n            \r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label >Password Confirmation</label>\r\n          <input\r\n            type='password'\r\n            className='form-control'\r\n            value={passwordConfirmation}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button className='btn btn-primary' type='submit'>\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}