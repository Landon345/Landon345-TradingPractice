{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\UserStock.jsx\";\nimport React from 'react';\n\nfunction UserStock(props) {\n  const {\n    name,\n    price_bought_at,\n    price_now,\n    amount\n  } = props.userStock;\n\n  const calculatePercentageGain = () => {\n    console.log(price_now.toString().slice(1));\n    let boughtAt = parseFloat(price_bought_at.toString().slice(1));\n    let nowAt = parseFloat(price_now.toString().slice(1));\n    let difference = nowAt - boughtAt;\n    let percentage = \"%\" + (difference / boughtAt * 100).toFixed(2);\n    return percentage;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card text-white bg-info mb-1\",\n    style: {\n      maxWidth: \"60rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"price bought at: \", price_bought_at, \", price now: \", price_now), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Amount: \", amount, \", \", calculatePercentageGain()), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Sell\")));\n}\n\nexport default UserStock;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/UserStock.jsx"],"names":["React","UserStock","props","name","price_bought_at","price_now","amount","userStock","calculatePercentageGain","console","log","toString","slice","boughtAt","parseFloat","nowAt","difference","percentage","toFixed","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,eAAP;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAA6CJ,KAAK,CAACK,SAAzD;;AAEA,QAAMC,uBAAuB,GAAG,MAAM;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACM,QAAV,GAAqBC,KAArB,CAA2B,CAA3B,CAAZ;AACA,QAAIC,QAAQ,GAAGC,UAAU,CAACV,eAAe,CAACO,QAAhB,GAA2BC,KAA3B,CAAiC,CAAjC,CAAD,CAAzB;AACA,QAAIG,KAAK,GAAGD,UAAU,CAACT,SAAS,CAACM,QAAV,GAAqBC,KAArB,CAA2B,CAA3B,CAAD,CAAtB;AACA,QAAII,UAAU,GAAGD,KAAK,GAAGF,QAAzB;AACA,QAAII,UAAU,GAAG,MAAM,CAACD,UAAU,GAACH,QAAX,GAAsB,GAAvB,EAA4BK,OAA5B,CAAoC,CAApC,CAAvB;AACA,WAAOD,UAAP;AAEH,GARD;;AASA,SAGI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAA8C,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE;AAAX,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BhB,IAA9B,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA6CC,eAA7C,mBAA2EC,SAA3E,CADA,EAER;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkCC,MAAlC,QAA4CE,uBAAuB,EAAnE,CAFQ,EAGA;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,CAFJ,CAHJ;AAYH;;AAED,eAAeP,SAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction UserStock(props){\r\n    const {name, price_bought_at, price_now, amount} = props.userStock;\r\n\r\n    const calculatePercentageGain = () => {\r\n        console.log(price_now.toString().slice(1));\r\n        let boughtAt = parseFloat(price_bought_at.toString().slice(1));\r\n        let nowAt = parseFloat(price_now.toString().slice(1));\r\n        let difference = nowAt - boughtAt;\r\n        let percentage = \"%\" + (difference/boughtAt * 100).toFixed(2);\r\n        return percentage;\r\n\r\n    }\r\n    return(\r\n        \r\n\r\n        <div className=\"card text-white bg-info mb-1\" style={{maxWidth: \"60rem\"}}>\r\n            <div className=\"card-header\">{name}</div>\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">price bought at: {price_bought_at}, price now: {price_now}</h5>\r\n    <p className=\"card-text\">Amount: {amount}, {calculatePercentageGain()}</p>\r\n            <button className=\"btn btn-primary\">Sell</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserStock;"]},"metadata":{},"sourceType":"module"}