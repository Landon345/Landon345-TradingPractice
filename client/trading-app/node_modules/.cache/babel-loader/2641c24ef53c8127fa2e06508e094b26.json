{"ast":null,"code":"import React, { useEffect, useState } from 'react';\n\nconst useHttpPut = (url, body, message) => {\n  const [response, setResponse] = useState([]);\n  useEffect(() => {\n    fetchTable();\n  }, body);\n\n  const fetchTable = async () => {\n    const updateThis = body;\n    const myResponse = await fetch(url, {\n      method: 'Put',\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'omit',\n      // include, *same-origin, omit\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(updateThis)\n    });\n    const jsonData = await myResponse.json();\n    setResponse(jsonData);\n    console.log(response);\n    console.log(message);\n  };\n\n  return [response];\n};\n\nexport default useHttpPut;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/hooks/httpPut.js"],"names":["React","useEffect","useState","useHttpPut","url","body","message","response","setResponse","fetchTable","updateThis","myResponse","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","jsonData","json","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAGA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ,KAAwB;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,UAAU;AACb,GAFQ,EAENJ,IAFM,CAAT;;AAGA,QAAMI,UAAU,GAAG,YAAY;AAC/B,UAAMC,UAAU,GAAGL,IAAnB;AACA,UAAMM,UAAU,GAAG,MAAMC,KAAK,CAC1BR,GAD0B,EACrB;AACDS,MAAAA,MAAM,EAAE,KADP;AAEDC,MAAAA,IAAI,EAAE,MAFL;AAEa;AACdC,MAAAA,KAAK,EAAE,UAHN;AAGkB;AACnBC,MAAAA,WAAW,EAAE,MAJZ;AAIoB;AACrBC,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB,OALR;AAMDC,MAAAA,QAAQ,EAAE,QANT;AAMmB;AACpBC,MAAAA,cAAc,EAAE,aAPf;AAO8B;AAC/Bd,MAAAA,IAAI,EAAEe,IAAI,CAACC,SAAL,CAAeX,UAAf;AARL,KADqB,CAA9B;AAWI,UAAMY,QAAQ,GAAG,MAAMX,UAAU,CAACY,IAAX,EAAvB;AACAf,IAAAA,WAAW,CAACc,QAAD,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACH,GAjBD;;AAoBA,SAAO,CAACC,QAAD,CAAP;AAEH,CA5BD;;AA6BA,eAAeJ,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst useHttpPut = (url, body, message) => {\r\n    const [response, setResponse] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetchTable();\r\n    }, body)\r\n    const fetchTable = async () => {\r\n    const updateThis = body;\r\n    const myResponse = await fetch(\r\n        url, {\r\n            method: 'Put',\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'omit', // include, *same-origin, omit\r\n            headers: {\"content-type\":\"application/json\"},\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(updateThis)\r\n        });\r\n        const jsonData = await myResponse.json();\r\n        setResponse(jsonData);\r\n        console.log(response);\r\n        console.log(message);\r\n    }\r\n\r\n\r\n    return [response];\r\n\r\n}\r\nexport default useHttpPut;"]},"metadata":{},"sourceType":"module"}