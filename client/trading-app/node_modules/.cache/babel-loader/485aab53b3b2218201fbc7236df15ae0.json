{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Dashboard.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport useHttpGet from '../hooks/httpGet';\n\nfunction Dashboard(props) {\n  const [stocks] = useHttpGet(`http://localhost:5000/api/userStocks/${props.username}`, [], \"Got user's stocks\");\n  const [reload, setReload] = useState('False');\n\n  const doReload = () => {\n    setReload(\"True\");\n    console.log(reload);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    onClick: doReload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.username), props.stocks.map(stock => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, stock.name, \", \", stock.price_bought_at, \", \", stock.price_now)));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Dashboard.jsx"],"names":["React","useEffect","useState","Link","Navbar","useHttpGet","Dashboard","props","stocks","username","reload","setReload","doReload","console","log","map","stock","name","price_bought_at","price_now"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM,CAACC,MAAD,IAAWH,UAAU,CAAE,wCAAuCE,KAAK,CAACE,QAAS,EAAxD,EAA2D,EAA3D,EAA+D,mBAA/D,CAA3B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,OAAD,CAApC;;AACA,QAAMU,QAAQ,GAAG,MAAM;AACrBD,IAAAA,SAAS,CAAC,MAAD,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,OAAO,EAAIE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBL,KAAK,CAACE,QAA/B,CAFF,EAGGF,KAAK,CAACC,MAAN,CAAaO,GAAb,CAAiBC,KAAK,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACC,IAAV,QAAkBD,KAAK,CAACE,eAAxB,QAA2CF,KAAK,CAACG,SAAjD,CADD,CAHH,CADF;AAWD;;AAED,eAAeb,SAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport useHttpGet from '../hooks/httpGet';\r\n\r\nfunction Dashboard(props) {\r\n  const [stocks] = useHttpGet(`http://localhost:5000/api/userStocks/${props.username}`, [], \"Got user's stocks\");\r\n  const [reload, setReload] = useState('False');\r\n  const doReload = () => {\r\n    setReload(\"True\");\r\n    console.log(reload);\r\n  }\r\n  \r\n  return(\r\n    <div >\r\n      <Navbar />\r\n      <p onClick = {doReload}>{props.username}</p>\r\n      {props.stocks.map(stock => (\r\n        <p>{stock.name}, {stock.price_bought_at}, {stock.price_now}</p>\r\n\r\n      ))}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}