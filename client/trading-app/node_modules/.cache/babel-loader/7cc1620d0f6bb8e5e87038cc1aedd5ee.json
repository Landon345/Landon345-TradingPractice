{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Landon Schlangen\\\\Documents\\\\WebDevelopmentFolders\\\\FullStackApps\\\\TradingPractice\\\\client\\\\trading-app\\\\src\\\\components\\\\Navbar.jsx\";\nimport React from 'react';\n\nfunction Navbar() {\n  const [user] = useHttpGet('http://localhost:5000/api/user/loggedin', []);\n  console.log(user);\n\n  const logout = async () => {\n    const user = {\n      username: user[0].username,\n      password: user[0].password,\n      dollars: user[0].dollars,\n      premium_user: user[0].premium_user,\n      loggedin: false\n    };\n    const response = await fetch(`http://localhost:5000/api/users/${username}`, {\n      method: 'Put',\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'include',\n      // include, *same-origin, omit\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n\n  if (user.length == 1) {\n    console.log(\"inside if statement\", user);\n    return React.createElement(\"nav\", {\n      className: \"navbar navbar-dark bg-dark mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/dashboard\",\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Dashboard\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: logout,\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Logout\")));\n  } else {\n    return React.createElement(\"nav\", {\n      className: \"navbar navbar-dark bg-dark mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/dashboard\",\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Dashboard\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/login\",\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Register\")));\n  }\n}\n\nexport default Navbar;","map":{"version":3,"sources":["C:/Users/Landon Schlangen/Documents/WebDevelopmentFolders/FullStackApps/TradingPractice/client/trading-app/src/components/Navbar.jsx"],"names":["React","Navbar","user","useHttpGet","console","log","logout","username","password","dollars","premium_user","loggedin","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","data","json","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,MAAT,GAAiB;AACf,QAAM,CAACC,IAAD,IAASC,UAAU,CAAC,yCAAD,EAA4C,EAA5C,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,QAAMI,MAAM,GAAG,YAAY;AACzB,UAAMJ,IAAI,GAAG;AACXK,MAAAA,QAAQ,EAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQK,QADP;AAEXC,MAAAA,QAAQ,EAAEN,IAAI,CAAC,CAAD,CAAJ,CAAQM,QAFP;AAGXC,MAAAA,OAAO,EAAEP,IAAI,CAAC,CAAD,CAAJ,CAAQO,OAHN;AAIXC,MAAAA,YAAY,EAAER,IAAI,CAAC,CAAD,CAAJ,CAAQQ,YAJX;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,mCAAkCN,QAAS,EADpB,EACuB;AAC3CO,MAAAA,MAAM,EAAE,KADmC;AAE3CC,MAAAA,IAAI,EAAE,MAFqC;AAE7B;AACdC,MAAAA,KAAK,EAAE,UAHoC;AAGxB;AACnBC,MAAAA,WAAW,EAAE,SAJ8B;AAInB;AACxBC,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB,OALkC;AAM3CC,MAAAA,QAAQ,EAAE,QANiC;AAMvB;AACpBC,MAAAA,cAAc,EAAE,aAP2B;AAOZ;AAC/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,IAAf;AARqC,KADvB,CAA5B;AAWI,UAAMsB,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAAnB;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACL,GArBD;;AAuBA,MAAGtB,IAAI,CAACwB,MAAL,IAAe,CAAlB,EAAoB;AAClBtB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,IAAnC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAQ,MAAA,OAAO,EAAEI,MAAjB;AAAyB,MAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAHF,CADF;AAQD,GAVD,MAUK;AACH,WACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CAJF,CADF;AASD;AAKF;;AAED,eAAeL,MAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Navbar(){\r\n  const [user] = useHttpGet('http://localhost:5000/api/user/loggedin', []);\r\n  console.log(user);\r\n\r\n  const logout = async () => {\r\n    const user = {\r\n      username: user[0].username,\r\n      password: user[0].password,\r\n      dollars: user[0].dollars,\r\n      premium_user: user[0].premium_user,\r\n      loggedin: false\r\n    }\r\n    const response = await fetch(\r\n        `http://localhost:5000/api/users/${username}`, {\r\n            method: 'Put',\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'include', // include, *same-origin, omit\r\n            headers: {\"content-type\":\"application/json\"},\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(user)\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n  }\r\n\r\n  if(user.length == 1){\r\n    console.log(\"inside if statement\", user);\r\n    return(\r\n      <nav className=\"navbar navbar-dark bg-dark mb-3\">\r\n        \r\n        <li><a href=\"/dashboard\" className=\"navbar-brand\">Dashboard</a></li>\r\n        <li><button onClick={logout} className=\"navbar-brand\">Logout</button></li>\r\n        \r\n      </nav>\r\n    );\r\n  }else{\r\n    return(\r\n      <nav className=\"navbar navbar-dark bg-dark mb-3\">\r\n        \r\n        <li><a href=\"/dashboard\" className=\"navbar-brand\">Dashboard</a></li>\r\n        <li><a href=\"/login\" className=\"navbar-brand\">Login</a></li>\r\n        <li><a href=\"/\" className=\"navbar-brand\">Register</a></li>\r\n        \r\n      </nav>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n    \r\n}\r\n\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}